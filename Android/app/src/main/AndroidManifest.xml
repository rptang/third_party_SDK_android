<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.project.rptang.android">
    //接收IM消息的自定义权限
    <permission
        android:name="com.project.rptang.android.permission.RECEIVE_MSG"
        android:protectionLevel="signature" />
    //使用接收IM消息权限
    <uses-permission android:name="com.project.rptang.android.permission.RECEIVE_MSG" />
    //接收来电的自定义权限
    <permission
        android:name="com.project.rptang.android.permission.INCOMING_CALL"
        android:protectionLevel="signature" />
    //使用接收来电权限
    <uses-permission android:name="com.project.rptang.android.permission.INCOMING_CALL" />
    //以下为必选配置

    //允许程序打开网络sockets
    <uses-permission android:name="android.permission.INTERNET" />
    //允许程序访问有关的网络信息
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    //允许程序访问Wi-Fi网络状态信息
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
    //允许应用读写用户的外部存储器
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
    //允许读取电话的状态
    <uses-permission android:name="android.permission.READ_PHONE_STATE" />
    //允许一个程序获取信息有关当前或最近运行的任务，一个缩略的任务状态，是否活动等等
    <uses-permission android:name="android.permission.GET_TASKS" />
    //允许程序录制音频
    <uses-permission android:name="android.permission.RECORD_AUDIO" />
    //允许应用程序修改全局声音设置的权限
    <uses-permission android:name="android.permission.MODIFY_AUDIO_SETTINGS" />
    //允许使用PowerManager的WakeLocks在进程休眠时能够后台保持
    <uses-permission android:name="android.permission.WAKE_LOCK" />
    //允许请求访问使用照相设备(如果使用视频通话则必选配置)
    <!--<uses-permission android:name="android.permission.CAMERA" />-->
    //其他
    //允许程序读取用户联系人数据
    <uses-permission android:name="android.permission.READ_CONTACTS" />
    //允许访问振动设备
    <uses-permission android:name="android.permission.VIBRATE" />
    //允许一个程序在系统启动完成时自定启动
    <uses-permission android:name="android.permission.WAKE_LOCK" />
    //允许一个程序接收到 ACTION_BOOT_COMPLETED广播在系统完成启动
    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />
    <uses-permission android:name="android.permission.READ_LOGS" />

    <application
        android:name=".utils.BaseApplication"
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:supportsRtl="true"
        android:theme="@style/Theme.AppCompat.Light.NoActionBar">
        <activity android:name=".activity.MainActivity">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <activity android:name=".activity.VoIPCallActivity"/>
        <!-- *****************************ECSDK核心服务类 （必须配置）Start******************************************** -->
        // SDK核心服务配置(必选配置)
        <service
            android:name="com.yuntongxun.ecsdk.ECClientService"
            android:enabled="true"
            android:process=":push" />
        <service
            android:name="com.yuntongxun.ecsdk.ECClientService$InnerService"
            android:enabled="true"
            android:process=":push" />
        // 以下两项为SDK事件提醒广播(必选配置)
        <receiver
            android:name="com.yuntongxun.ecsdk.booter.CCPReceivers$AlarmReceiver"
            android:process=":push" />
        // v5.1.9r增加配置选项(必选配置)
        <receiver
            android:name="com.yuntongxun.ecsdk.booter.Alarm"
            android:exported="false"
            android:process=":push" />
        // SDK网络改变广播(必选配置)
        <receiver
            android:name="com.yuntongxun.ecsdk.booter.CCPReceivers$ConnectionReceiver"
            android:process=":push">
            <intent-filter>
                <action android:name="android.net.conn.CONNECTIVITY_CHANGE" />
            </intent-filter>
        </receiver>
        // SDK广播通知配置（开机广播）
        // 可选广播、如果应用想做开机重启，可以实现该广播通知即可
        <receiver
            android:name="com.yuntongxun.ecsdk.booter.CCPReceivers$BootReceiver"
            android:process=":push">
            <intent-filter>
                <action android:name="android.intent.action.BOOT_COMPLETED" />
            </intent-filter>
        </receiver>
        // 配置SDK消息通知广播 ,SDK通知会分三种提醒方式
        // 1、直接通过设置的回调接口（OnChatReceiveListener）Push给应用
        // 2、如果应用没有设置回调接口则采用（BroadcastReceiver）广播通知（v5.1.8版本）此时如果应用处于未运行状态则会直接唤醒应用处理
        // 3、如果应用未处于运行状态并且不想被唤醒应用运行则采用状态栏通知处理（SDK直接提醒，不会通知应用）,比如调用
        // ECDevice#logout(ECDevice.NotifyMode, ECDevice.OnLogoutListener)退出接口传入后台接收消息才会有提醒

        // 注意：以上在a和b的场景下，SDK都会将消息直接给应用处理，只有在c的情况SDK才会直接处理消息提醒，所以应用需要处理a和b两种情况
        // 声明自定义通知的广播接收器，第三方 APP 集成时，action 中的 com.yuntongxun.ecdemo 请替换为自己的包名 -->
        <!-- 需要权限声明 <uses-permission android:name="com.yuntongxun.ecdemo.permission.RECEIVE_MSG"/> -->
        // 如果没有VOIP功能可以忽略
        <!-- 需要权限声明 <uses-permission android:name="com.yuntongxun.ecdemo.permission.INCOMING_CALL"/> -->
        <receiver
            android:name=".service.YuntxNotifyReceiver"
            android:exported="false">
            <intent-filter>
                // 接收push消息
                // action匹配规则{packageName + ".action" + "功能"}
                <action android:name="com.yuntongxun.ecdemo.action.VOIP_CALL" />
                <action android:name="com.yuntongxun.ecdemo.action.MESSAGE" />
                <action android:name="com.yuntongxun.ecdemo.action.NOTIFICATION_CLICK" />
                <action android:name="com.yuntongxun.ecdemo.action.PERSON_VERSION" />
                // 这个配置是容联IM专有的配置，其他应用集成的时候可以忽略
                <action android:name="com.yuntongxun.ecdemo.action.SOFT_UPDATER" />
            </intent-filter>
        </receiver>
        // *****************************ECSDK核心服务类 End*******************************************


        // 声明自定义通知的广播接收器（需要替换包名，详见注意事项）
        <activity android:name=".activity.ECVoIPBaseActivity" />
        <activity android:name=".activity.BaseActivity"></activity>

        <meta-data android:name="design_width" android:value="750">
        </meta-data>
        <meta-data android:name="design_height" android:value="1334">
        </meta-data>
    </application>

</manifest>